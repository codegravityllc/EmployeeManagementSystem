package com.codegravity.EmployeeManagementSystem.models;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.*;
import java.util.Date;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Employee {

    // Primary key for the Employee entity, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long employeeId;

    // First name of the employee, with validation for non-empty and max length of 50 characters
    @NotBlank(message = "First name cannot be empty")
    @Size(max = 50, message = "First name should be at most 50 characters")
    private String firstName;

    // Last name of the employee, with validation for non-empty and max length of 50 characters
    @NotBlank(message = "Last name cannot be empty")
    @Size(max = 50, message = "Last name should be at most 50 characters")
    private String lastName;

    // Date of birth of the employee, stored as a DATE in the database
    @Temporal(TemporalType.DATE)
    private Date dob;

    // Email of the employee, with validation for non-empty and valid email format
    @Email(message = "Invalid email format")
    @NotBlank(message = "Email cannot be empty")
    @Column(unique = true) // Ensures email is unique in the database
    private String email;

    // Phone number of the employee, with validation for exactly 10 digits
    @Pattern(regexp = "\\d{10}", message = "Phone number must be 10 digits")
    private String phone;

    // One-to-One relationship with EducationDetails entity
    // CascadeType.ALL ensures that operations on Employee are cascaded to EducationDetails
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "education_id", referencedColumnName = "educationId") // Foreign key to EducationDetails
    private EducationDetails educationDetails;

    // One-to-One relationship with VisaDetails entity
    // CascadeType.ALL ensures that operations on Employee are cascaded to VisaDetails
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "visa_id", referencedColumnName = "visaId") // Foreign key to VisaDetails
    private VisaDetails visaDetails;
}